##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	#location /hls {
	#add_header 'Access-Control-Allow-Origin' '*' always;
	#add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
	#add_header 'Access-Control-Allow-Headers' 'Origin,Authorization,Accept,Content-Type' always;
	#add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	#add_header 'Access-Control-Allow-Credentials' 'true' always;

	location /hls {
		# Serve HLS fragments
		types {
			application/vnd.apple.mpegurl m3u8;
			video/mp2t ts;
		}
		root /tmp;
		add_header Cache-Control no-cache;
	}

	location /dash {
		# Serve DASH fragments
		root /tmp;
		add_header Cache-Control no-cache;
	}

	location /thumbnails {
		# Serve video fragments
		alias /videos/thumbnails;
		add_header Cache-Control no-cache;
		autoindex on;
		autoindex_localtime on;
	}

	#location /recordings {
	#	# Serve video fragments
	#	alias /videos/recordings;
	#	add_header Cache-Control no-cache;
	#	autoindex on;
	#	autoindex_localtime on;
	#}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# This provides RTMP statistics as XML
	location /stat {
		rtmp_stat all;
	}
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
